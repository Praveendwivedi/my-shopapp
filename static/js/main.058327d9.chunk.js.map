{"version":3,"sources":["Components/CustomerForm.js","Components/BOwnerForm.js","App.js","reportWebVitals.js","index.js"],"names":["handleSubmit","e","alert","preventDefault","CustomerForm","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","Text","className","Check","label","Button","variant","target","value","console","log","BOwnerForm","App","Accordion","defaultActiveKey","Card","style","width","Header","Toggle","as","eventKey","Collapse","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.058327d9.chunk.js","sourcesContent":["import Form from 'react-bootstrap/Form'\nimport Button from   'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction handleSubmit(e){\nreturn(\nalert('submitted'),\ne.preventDefault())\n\n}\nfunction CustomerForm() {\n\n\n return(\n \t<div>\n\t\t <Form onSubmit={handleSubmit}>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicAddress\">\n    <Form.Label>Address</Form.Label>\n    <Form.Control type=\"address\" placeholder=\"jhumritalaiya\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n\t</div>\n);\n}\n\nexport default CustomerForm;\n","import Form from 'react-bootstrap/Form'\nimport Button from   'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction handleSubmit(e){\nreturn(\nalert('submitted'+e.target[0].value),\nconsole.log(e),\ne.preventDefault())\n\n}\nfunction BOwnerForm() {\n\n\n return(\n \t<div>\n\t\t <Form onSubmit={handleSubmit}>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicAddress\">\n    <Form.Label>Address</Form.Label>\n    <Form.Control type=\"address\" placeholder=\"jhumritalaiya\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicBType\">\n    <Form.Label>Type of business</Form.Label>\n    <Form.Control type=\"BType\" placeholder=\"Business name\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n\t</div>\n);\n}\n\nexport default BOwnerForm;\n","import './App.css';\nimport Alert from 'react-bootstrap/Alert';\nimport CustomerForm from './Components/CustomerForm.js';\nimport BOwnerForm from './Components/BOwnerForm.js';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card'\nimport useContext from 'react-bootstrap/Accordion';\nimport AccordionContext from 'react-bootstrap/Accordion';\nimport useAccordionToggle from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button'\nfunction ContextAwareToggle({ children, eventKey, callback }) {\n  const currentEventKey = useContext(AccordionContext);\n\n  const decoratedOnClick = useAccordionToggle(\n    eventKey,\n    () => callback && callback(eventKey),\n  );\n\n  const isCurrentEventKey = currentEventKey === eventKey;\n\n  return (\n    <button\n      type=\"button\"\n      style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\n      onClick={decoratedOnClick}\n    >\n      {children}\n    </button>\n  );\n}\nfunction handleSubmit(e){\nreturn(\nalert('submitted'),\ne.preventDefault())\n\n}\nfunction App() {\n  return (<div>\n  <Accordion defaultActiveKey=\"0\">\n  <Card style={{ width: '16rem' }}>\n  <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n        Customer!\n      </Accordion.Toggle>\n    </Card.Header>\n<Accordion.Collapse eventKey=\"0\">\n  <Card.Body>\n    <CustomerForm />\n  </Card.Body>\n  </Accordion.Collapse>\n</Card>\n<Card style={{ width: '16rem' }}>\n  <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n        BusinessOwner!\n      </Accordion.Toggle>\n    </Card.Header>\n<Accordion.Collapse eventKey=\"1\">\n  <Card.Body>\n    <BOwnerForm />\n  </Card.Body>\n  </Accordion.Collapse>\n</Card>\n    </Accordion>\n    </div>\n    )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}